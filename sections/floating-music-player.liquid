{% if template.name != 'index' %}
<div id="floating-music-player">
  <div id="track-title">Loading...</div>

  <div class="cd-wrapper">
    <img id="cd-icon" src="{{ section.settings.cd_image | image_url: width: 200 }}" alt="Music Disc" />
    <button id="music-toggle-button" aria-label="Toggle music">
      <svg id="icon-play" xmlns="http://www.w3.org/2000/svg" class="icon" viewBox="0 0 24 24" fill="black">
        <path d="M8 5v14l11-7z" />
      </svg>
      <svg id="icon-pause" xmlns="http://www.w3.org/2000/svg" class="icon hidden" viewBox="0 0 24 24" fill="black">
        <path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z" />
      </svg>
    </button>
  </div>

  <audio id="audio-player"></audio>
</div>

<style>
  #floating-music-player {
    position: fixed;
    bottom: 24px;
    right: 24px;
    width: {{ section.settings.cd_size | default: 60 }}px;
    height: {{ section.settings.cd_size | default: 60 }}px;
    z-index: 9999;
    display: flex;
    flex-direction: column;
    align-items: center;
    font-family: sans-serif;
  }

  #track-title {
    font-size: 11px;
    color: black;
    margin-bottom: 6px;
    max-width: 120px;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .cd-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    cursor: pointer;
  }

  #cd-icon {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    object-fit: cover;
  }

  #cd-icon.spin {
    animation: spin 4s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  #music-toggle-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(255, 255, 255, 0.7);
    border: none;
    border-radius: 50%;
    padding: 4px;
    width: 28px;
    height: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
  }

  #music-toggle-button .icon {
    width: 16px;
    height: 16px;
  }

  .hidden {
    display: none;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const tracks = [
      {
        title: "Track 1",
        url: "{{ section.settings.track_1_url }}"
      },
      {
        title: "Track 2",
        url: "{{ section.settings.track_2_url }}"
      },
      {
        title: "Track 3",
        url: "{{ section.settings.track_3_url }}"
      }
    ].filter(track => track.url);

    const cdIcon = document.getElementById("cd-icon");
    const audio = document.getElementById("audio-player");
    const title = document.getElementById("track-title");
    const toggleButton = document.getElementById("music-toggle-button");
    const playIcon = document.getElementById("icon-play");
    const pauseIcon = document.getElementById("icon-pause");

    if (!tracks.length) {
      console.warn("No audio tracks configured.");
      title.textContent = "No tracks loaded.";
      return;
    }

    let currentTrack = parseInt(localStorage.getItem('yossi_current_track')) || 0;
    let isPlaying = false;
    let hasInteracted = false;
    const wasPaused = localStorage.getItem('yossi_music_paused') === 'true';
    const lastTime = parseFloat(localStorage.getItem('yossi_music_time')) || 0;

    function updateIcons() {
      if (isPlaying) {
        playIcon.classList.add('hidden');
        pauseIcon.classList.remove('hidden');
        cdIcon.classList.add('spin');
      } else {
        playIcon.classList.remove('hidden');
        pauseIcon.classList.add('hidden');
        cdIcon.classList.remove('spin');
      }
    }

    function loadTrack(index) {
      if (!tracks[index]) return;
      audio.src = tracks[index].url;
      title.textContent = tracks[index].title || "Untitled Track";
      localStorage.setItem('yossi_current_track', index);
    }

    function playMusic() {
      audio.play().then(() => {
        isPlaying = true;
        updateIcons();
        localStorage.setItem('yossi_music_paused', 'false');
      }).catch((err) => {
        console.warn("Autoplay blocked:", err);
      });
    }

    function pauseMusic() {
      audio.pause();
      isPlaying = false;
      updateIcons();
      localStorage.setItem('yossi_music_paused', 'true');
    }

    function toggleMusic() {
      if (audio.paused) {
        currentTrack = (currentTrack + 1) % tracks.length;
        loadTrack(currentTrack);
        playMusic();
      } else {
        pauseMusic();
      }
    }

    toggleButton.addEventListener("pointerdown", toggleMusic);
    cdIcon.addEventListener("pointerdown", toggleMusic);

    audio.addEventListener("ended", () => {
      currentTrack = (currentTrack + 1) % tracks.length;
      loadTrack(currentTrack);
      if (isPlaying) {
        playMusic();
      }
    });

    audio.addEventListener("timeupdate", () => {
      localStorage.setItem('yossi_music_time', audio.currentTime);
    });

    loadTrack(currentTrack);
    audio.currentTime = lastTime;

    function tryPlayOnInteraction() {
      if (!hasInteracted && !wasPaused) {
        hasInteracted = true;
        playMusic();
        document.removeEventListener('scroll', tryPlayOnInteraction);
        document.removeEventListener('click', tryPlayOnInteraction);
        document.removeEventListener('touchstart', tryPlayOnInteraction);
      }
    }

    if (!wasPaused) {
      document.addEventListener('scroll', tryPlayOnInteraction);
      document.addEventListener('click', tryPlayOnInteraction);
      document.addEventListener('touchstart', tryPlayOnInteraction);
    }
  });
</script>
{% endif %}

{% schema %}
{
  "name": "Floating Music Player",
  "tag": "section",
  "settings": [
    {
      "type": "image_picker",
      "id": "cd_image",
      "label": "CD Icon Image"
    },
    {
      "type": "range",
      "id": "cd_size",
      "label": "CD Size (px)",
      "min": 40,
      "max": 120,
      "step": 4,
      "default": 60
    },
    {
      "type": "url",
      "id": "track_1_url",
      "label": "Track 1 URL"
    },
    {
      "type": "url",
      "id": "track_2_url",
      "label": "Track 2 URL"
    },
    {
      "type": "url",
      "id": "track_3_url",
      "label": "Track 3 URL"
    }
  ],
  "presets": [
    {
      "name": "Floating Music Player"
    }
  ]
}
{% endschema %}
